<span id="${spec.Id}">${spec.Leader} ${spec.Name}</span>

<if condition="spec.Status == Status.Failing">
  <div class="failure">
    &lArr; FAILED
    <ul class="prev-next">
      <li class="failure">
        <a if="spec.PreviousFailed != null"
           href="#${spec.PreviousFailed.Id}" title="Go to previous failed specification">&uArr;</a>
      </li>
      <li class="failure">
        <a if="spec.NextFailed != null"
           href="#${spec.NextFailed.Id}" title="Go to next failed specification">&dArr;</a>
      </li>
    </ul>
  </div>
  <p class="exception_type">
    ${spec.Exception.TypeName}
  </p>
  <pre class="exception_message">${spec.Exception}</pre>
</if>

<div if="spec.Status == Status.NotImplemented" class="notimplemented">
  &lArr; NOT IMPLEMENTED
  <ul class="prev-next">
    <li class="prev notimplemented">
      <a if="spec.PreviousNotImplemented != null"
         href="#${spec.PreviousNotImplemented.Id}" title="Go to previous not implemented specification">&uArr;</a>
    </li>
    <li class="next notimplemented">
      <a if="spec.NextNotImplemented != null"
         href="#${spec.NextNotImplemented.Id}" title="Go to next not implemented specification">&dArr;</a>
    </li>
  </ul>
</div>

<div if="spec.Status == Status.Ignored"
     class="ignored">
  &lArr; IGNORED
  <ul class="prev-next">
    <li class="prev ignored">
      <a if="spec.PreviousIgnored != null"
         href="#${spec.PreviousIgnored.Id}"
         title="Go to previous ignored specification">&uArr;</a>
    </li>
    <li class="next ignored">
      <a if="spec.NextIgnored != null"
         href="#${spec.NextIgnored.Id}"
         title="Go to next ignored specification">&dArr;</a>
    </li>
  </ul>
</div>

<for each="var supplement in spec.Supplements">
  <for each="var item in supplement.Value">
    <if condition='item.Key.StartsWith("img-")'>
      <var name="Guid.NewGuid()" />
      <div>
        [<a id="${name}_link" href="javascript:toggleVisibility('${name}', '${supplement.Key} ${item.Key}');">Show ${supplement.Key} ${item.Key}</a>]
      </div>
      <div id="${name}" class="supplement">
        <a href="resources/${System.IO.Path.GetFileName(item.Value)}">
          <img width="80%" src="resources/${System.IO.Path.GetFileName(item.Value)}" />
        </a>
      </div>
    </if>
    <if condition='item.Key.StartsWith("html-")'>
      <var name="Guid.NewGuid()" />
      <div>
        [<a id="${name}_link" href="javascript:toggleVisibility('${name}', '${supplement.Key} ${item.Key}');">Show ${supplement.Key} ${item.Key}</a>]
      </div>
      <div id="${name}" class="supplement">
        <iframe src="resources/${System.IO.Path.GetFileName(item.Value)}" width="100%" height="600px">
        </iframe>
      </div>
    </if>
    <if condition='item.Key.StartsWith("text-")'>
      <var name="Guid.NewGuid()" />
      <div>
        [<a id="${name}_link" href="javascript:toggleVisibility('${name}', '${supplement.Key} ${item.Key}');">Show ${supplement.Key} ${item.Key}</a>]
      </div>
      <div id="${name}" class="supplement">
        <pre>${item.Value}</pre>
      </div>
    </if>
  </for> 
</for>

<script type="text/javascript" once="toggle-visibility">
  function toggleVisibility(id, description)
  {
    var section = document.getElementById(id);
    var link = document.getElementById(id + "_link");

    if (section.style.display == "block")
    {
      section.style.display = "none";
      link.innerHTML = "Show " + description;
    } else
    {
      section.style.display = "block";
      link.innerHTML = "Hide " + description;
    }
  };
</script> 
